\."#############################################################################
\."$Id: libnodeupdown.3,v 1.20 2005-03-31 22:44:22 achu Exp $
\."#############################################################################
\."  Copyright (C) 2003 The Regents of the University of California.
\."  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
\."  Written by Albert Chu <chu11@llnl.gov>
\."  UCRL-CODE-155699
\."  
\."  This file is part of Whatsup, tools and libraries for determining up and
\."  down nodes in a cluster.  For details, see http://www.llnl.gov/linux/.
\."
\."  Whatsup is free software; you can redistribute it and/or modify it under
\."  the terms of the GNU General Public License as published by the Free
\."  Software Foundation; either version 2 of the License, or (at your option)
\."  any later version.
\."  
\."  Whatsup is distributed in the hope that it will be useful, but WITHOUT 
\."  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
\."  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
\."  for more details.
\."  
\."  You should have received a copy of the GNU General Public License along
\."  with Whatsup; if not, write to the Free Software Foundation, Inc.,
\."  59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
\."############################################################################
.\"
.TH LIBNODEUPDOWN 3 "August 2003" "LLNL" "LIBNODEUPDOWN"
.SH NAME
libnodeupdown \- a library of functions to determine if a node is up
or down
.SH SYNOPSIS
.B #include <nodeupdown.h>
.sp
.BI "nodeupdown_t nodeupdown_handle_create(void);"
.sp
.BI "int nodeupdown_handle_destroy(nodeupdown_t handle);"
.sp
.BI "int nodeupdown_load_data(nodeupdown_t handle, const char *gmond_hostname, int gmond_port, int timeout_len, char *reserved);"
.sp
.BI "int nodeupdown_errnum(nodeupdown_t handle);"
.sp
.BI "char *nodeupdown_strerror(int errnum);"
.sp
.BI "char *nodeupdown_errormsg(int errnum);"
.sp
.BI "void nodeupdown_perror(nodeupdown_t handle, const char *msg);"
.sp
.BI "int nodeupdown_get_up_nodes_string(nodeupdown_t handle, char *buf, int buflen);"
.sp
.BI "int nodeupdown_get_down_nodes_string(nodeupdown_t handle, char *buf, int buflen);"
.sp
.BI "int nodeupdown_get_up_nodes_list(nodeupdown_t handle, char **list, int len);"
.sp
.BI "int nodeupdown_get_down_nodes_list(nodeupdown_t handle, char **list, int len);"
.sp
.BI "int nodeupdown_is_node_up(nodeupdown_t handle, const char *node);"
.sp
.BI "int nodeupdown_is_node_down(nodeupdown_t handle, const char *node);"
.sp
.BI "int nodeupdown_up_count(nodeupdown_t handle);"
.sp
.BI "int nodeupdown_down_count(nodeupdown_t handle);"
.sp
.BI "int nodeupdown_nodelist_create(nodeupdown_t handle, char ***list);"
.sp
.BI "int nodeupdown_nodelist_clear(nodeupdown_t handle, char **list);"
.sp
.BI "int nodeupdown_nodelist_destroy(nodeupdown_t handle, char **list);"
.br
.SH DESCRIPTION
The nodeupdown library functions are a set of functions that interacts
with ganglia to determine if a node is up or down.  For instructions,
please see the individual manpages for each of the functions above, or
read the comments written in /usr/include/nodeupdown.h.  Please see
the
.BR nodeupdown.conf (5)
manpage for information about the nodeupdown configuration file.

.br
.SH FILES
/usr/include/nodeupdown.h
.SH "SEE ALSO"
nodeupdown_handle_create(3), nodeupdown_load_data(3),
nodeupdown_handle_destroy(3), nodeupdown_errnum(3),
nodeupdown_strerror(3), nodeupdown_errormsg(3), nodeupdown_perror(3),
nodeupdown_get_up_nodes_string(3),
nodeupdown_get_down_nodes_string(3), nodeupdown_get_up_nodes_list(3),
nodeupdown_get_down_nodes_list(3), nodeupdown_is_node_up(3),
nodeupdown_is_node_down(3), nodeupdown_up_count(3),
nodeupdown_down_count(3), nodeupdown_nodelist_create(3),
nodeupdown_nodelist_clear(3), nodeupdown_nodelist_destroy(3),
nodeupdown.conf(5)
