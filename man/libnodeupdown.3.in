\."#############################################################################
\."$Id: libnodeupdown.3.in,v 1.20 2006-01-18 21:15:43 chu11 Exp $
\."#############################################################################
\."  Copyright (C) 2003 The Regents of the University of California.
\."  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
\."  Written by Albert Chu <chu11@llnl.gov>
\."  UCRL-CODE-155699
\."  
\."  This file is part of Whatsup, tools and libraries for determining up and
\."  down nodes in a cluster.  For details, see http://www.llnl.gov/linux/.
\."
\."  Whatsup is free software; you can redistribute it and/or modify it under
\."  the terms of the GNU General Public License as published by the Free
\."  Software Foundation; either version 2 of the License, or (at your option)
\."  any later version.
\."  
\."  Whatsup is distributed in the hope that it will be useful, but WITHOUT 
\."  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
\."  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
\."  for more details.
\."  
\."  You should have received a copy of the GNU General Public License along
\."  with Whatsup; if not, write to the Free Software Foundation, Inc.,
\."  59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
\."############################################################################
.\"
.TH LIBNODEUPDOWN 3 "August 2003" "LLNL" "LIBNODEUPDOWN"
.SH NAME
libnodeupdown \- a library of functions to determine if a node is up
or down
.SH SYNOPSIS
.B #include <nodeupdown.h>
.sp
.BI "nodeupdown_t nodeupdown_handle_create(void);"
.sp
.BI "int nodeupdown_handle_destroy(nodeupdown_t handle);"
.sp
.BI "int nodeupdown_load_data(nodeupdown_t handle, const char *hostname, int port, int timeout_len, char *reserved);"
.sp
.BI "int nodeupdown_errnum(nodeupdown_t handle);"
.sp
.BI "char *nodeupdown_strerror(int errnum);"
.sp
.BI "char *nodeupdown_errormsg(int errnum);"
.sp
.BI "void nodeupdown_perror(nodeupdown_t handle, const char *msg);"
.sp
.BI "int nodeupdown_get_up_nodes_string(nodeupdown_t handle, char *buf, int buflen);"
.sp
.BI "int nodeupdown_get_down_nodes_string(nodeupdown_t handle, char *buf, int buflen);"
.sp
.BI "int nodeupdown_get_up_nodes_list(nodeupdown_t handle, char **list, int len);"
.sp
.BI "int nodeupdown_get_down_nodes_list(nodeupdown_t handle, char **list, int len);"
.sp
.BI "int nodeupdown_is_node_up(nodeupdown_t handle, const char *node);"
.sp
.BI "int nodeupdown_is_node_down(nodeupdown_t handle, const char *node);"
.sp
.BI "int nodeupdown_up_count(nodeupdown_t handle);"
.sp
.BI "int nodeupdown_down_count(nodeupdown_t handle);"
.sp
.BI "int nodeupdown_nodelist_create(nodeupdown_t handle, char ***list);"
.sp
.BI "int nodeupdown_nodelist_clear(nodeupdown_t handle, char **list);"
.sp
.BI "int nodeupdown_nodelist_destroy(nodeupdown_t handle, char **list);"
.br
.SH DESCRIPTION
The nodeupdown library functions are a set of functions that interacts
with a particular backend tool and a clusterlist database to determine
if the nodes of a cluster are up or down.  See below for additional
information on backend modules and clusterlist modules to learn about
which backend tool and clusterlist database format is used.

For API information, please see the individual manpages for each of
the functions above, or read the comments written in
/usr/include/nodeupdown.h.  Please see the
.BR nodeupdown.conf (5)
manpage for information about the nodeupdown configuration file.

.SH BACKEND MODULES

The nodeupdown library loads a backend module, which uses a particular
backend tool, to gather up/down info for the nodeupdown library.  By
default, the following backend tools are searched for by nodeupdown in
the following order:

ganglia - See http://ganglia.sourceforge.net for more information.

cerebro - See http://cerebro.sourceforge.net for more information.

If none of the above are found, the nodeupdown library will search for
a backend module in @NODEUPDOWN_MODULE_DIR@ until one is found.

.SH CLUSTERLIST MODULES

The nodeupdown library loads a clusterlist module to obtain a list of
all cluster nodes.  There are several possible clusterlist formats
that can be parsed.  By default, the following clusterlist modules are
searched for by nodeupdown in the following order:

.if @MANPAGE_GENDERS@ \{
genders - Uses a genders database and the genders library to determine
all nodes in the cluster.
   
\}
   
hostsfile - Uses a file that lists the hostname of every node in the
cluster on a separate line.  The default hostsfile is
@NODEUPDOWN_CLUSTERLIST_HOSTSFILE_DEFAULT@.

If none of the above are found, the nodeupdown library will search for
a clusterlist module in @NODEUPDOWN_MODULE_DIR@.  If none are found, a
default behavior will be implemented by the nodeupdown library.

.SH CONFIG MODULES

The nodeupdown library optionally loads a configuration module, which
can be used to define the default values used in 
.B nodeupdown_load_data(3).
The configuration module is primarily used for ease of configuring a
large cluster of nodes, rather than writing and distributing multiple
configuration files throughout a cluster.  By default, the following
configuration modules are searched for by nodeupdown in the following
order:

None built by default

If none of the above are found, the nodeupdown library will search for
a config module in @NODEUPDOWN_MODULE_DIR@.  The nodeupdown
configuration file takes precedence over the configuration module.
When neither are in use, defaults are supplied by the backend tool.

.SH FILES
/usr/include/nodeupdown.h
.SH SEE ALSO
nodeupdown_handle_create(3), nodeupdown_load_data(3),
nodeupdown_handle_destroy(3), nodeupdown_errnum(3),
nodeupdown_strerror(3), nodeupdown_errormsg(3), nodeupdown_perror(3),
nodeupdown_get_up_nodes_string(3),
nodeupdown_get_down_nodes_string(3), nodeupdown_get_up_nodes_list(3),
nodeupdown_get_down_nodes_list(3), nodeupdown_is_node_up(3),
nodeupdown_is_node_down(3), nodeupdown_up_count(3),
nodeupdown_down_count(3), nodeupdown_nodelist_create(3),
nodeupdown_nodelist_clear(3), nodeupdown_nodelist_destroy(3),
nodeupdown.conf(5)
