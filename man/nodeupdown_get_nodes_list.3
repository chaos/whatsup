\."#############################################################################
\."$Id: nodeupdown_get_nodes_list.3,v 1.12 2003-12-29 19:02:01 achu Exp $
\."#############################################################################
\."  Copyright (C) 2003 The Regents of the University of California.
\."  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
\."  Written by Albert Chu <chu11@llnl.gov>
\."  UCRL-CODE-155699
\."  
\."  This file is part of Whatsup, tools and libraries for determining up and
\."  down nodes in a cluster.  For details, see http://www.llnl.gov/linux/.
\."
\."  Whatsup is free software; you can redistribute it and/or modify it under
\."  the terms of the GNU General Public License as published by the Free
\."  Software Foundation; either version 2 of the License, or (at your option)
\."  any later version.
\."  
\."  Whatsup is distributed in the hope that it will be useful, but WITHOUT 
\."  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
\."  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
\."  for more details.
\."  
\."  You should have received a copy of the GNU General Public License along
\."  with Whatsup; if not, write to the Free Software Foundation, Inc.,
\."  59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
\."############################################################################
.TH NODEUPDOWN_GET_UP_NODES_LIST 3 "August 2003" "LLNL" "LIBNODEUPDOWN"
.SH NAME
nodeupdown_get_up_nodes_list, nodeupdown_get_down_nodes_list, - get up
or down nodes
.SH SYNOPSIS
.B #include <nodeupdown.h>
.sp
.BI "int nodeupdown_get_up_nodes_list(nodeupdown_t handle, char **list, int len);"
.sp
.BI "int nodeupdown_get_down_nodes_list(nodeupdown_t handle, char **list, int len);"
.br
.SH DESCRIPTION
\fBnodeupdown_get_up_nodes_list()\fR retrieves a list of noddes that
are up and places each node name into the list pointed to by
\fIlist\fR.  \fIlen\fR should indicate the number of nodes that can be
stored in list.  \fBnodeupdown_get_down_nodes_list()\fR is identical
to \fBnodeupdown_get_up_nodes_list()\fR, except that it retrieves a
list of down nodes.

To avoid passing in a list that is not large enough to store all of
the up or down nodes,
.BR nodeupdown_nodelist_create (3)
should be used to create a list that is guaranteed to be large enough
to store all of the nodes.
.br
.SH RETURN VALUES
On success, the number of nodes copied into \fIlist\fR is returned.
On error, -1 is returned, and an error code is returned in
\fIhandle\fR.  The error code can be retrieved via
.BR nodeupdown_errnum (3)
, and a description of the error code can be retrieved via
.BR nodeupdown_strerror (3).  
Error codes are defined in nodeupdown.h.
.br
.SH ERRORS
.TP
.B NODEUPDOWN_ERR_NULLHANDLE
The handle parameter is NULL.  The nodeupdown handle must be created
with
.BR nodeupdown_handle_create (3).
.TP
.B NODEUPDOWN_ERR_NOTLOADED
.BR nodeupdown_load_data (3)
has not been called and no data has been retrieved from ganglia.
.TP
.B NODEUPDOWN_ERR_PARAMETERS
An incorrect parameter has been passed in.  
.TP
.B NODEUPDOWN_ERR_NULLPTR
A null pointer has been found in the list passed in.
.TP
.B NODEUPDOWN_ERR_OVERFLOW
The list pointed to by \fIlist\fR is not large enough to store all the
nodes.
.TP
.B NODEUPDOWN_ERR_OUTMEM
.BR malloc (3)
has failed internally, system is out of memory.
.TP
.B NODEUPDOWN_ERR_MASTERLIST
internal error with the Nodeupdown master list of nodes.
.TP
.B NODEUPDOWN_ERR_HOSTLIST
hostlist API has failed internally.
.TP
.B NODEUPDOWN_ERR_MAGIC 
\fIhandle\fR has an incorrect magic number.  \fIhandle\fR does not
point to a nodeupdown handle or \fIhandle\fR has been destroyed by
.BR nodeupdown_handle_destroy (3).
.br
.SH FILES
/usr/include/nodeupdown.h
.SH SEE ALSO
libnodeupdown(3), nodeupdown_handle_create(3),
nodeupdown_load_data(3), nodeupdown_get_up_nodes_string (3),
nodeupdown_get_down_nodes_string (3), nodeupdown_errnum(3),
nodeupdown_strerror(3)
